
# Seleccionamos el servicio que queremos desplegar
global:
  serviceSelector:
    testing: true
    minio: false
    mysql: false
    pgsql: false
    mongo: false
    redis: false
    rsync: false


# Valores para el deployment de testing:
testing:
  serviceName: "testing-service"
  replicas: 1
  image:
    repository: "arpovea-tools"
    tag: "latest"
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "200m"
      memory: "256Mi"

# Valores para el cronjob de backup de minio
minio:
  endpoint: http://minio.minio:9000
  user: "defaultUser"
  password: "defaultPassword"
  serviceName: miniodump
  imageTag: "1.0"
  reqMemory: 256Mi
  reqCpu: 200m
  pvcBackupName: backup
  cronTime: "0 3 * * *"
  pathBackup: /miniodump
  pathCompress: s3minio
  deleteOldBackups: false
  maxBackupDays: 7

# Valores para el cronjob de backup de mysql
mysql:
  serviceName: mysqldump
  imageTag: "1.0"
  reqMemory: 100Mi
  reqCpu: 100m
  pvcBackupName: backups
  cronTime: "*/5 * * * *"
  allDatabases: false
  backupDatabases: "basededatos1 basededatos2 sampledb"
  backupStorage: "exampleapp1"
  dbHost: "mysql"
  dbUser: "root"
  dbPass: "xxxxxxxxxxx"
  deleteOldBackups: false
  maxBackupDays: 7

# Valores para el cronjob de backup de mongo
mongo:
  serviceName: mongodump
  imageTag: "1.0"
  reqMemory: 100Mi
  reqCpu: 100m
  pvcBackupName: backups
  cronTime: "*/5 * * * *"
  allDatabases: false
  backupDatabases: "basededatos1 basededatos2 sampledb"
  backupStorage: "exampleapp1"
  dbHost: "mongodb"
  dbUser: "admin"
  dbPass: "xxxxxxxxxxx"
  deleteOldBackups: false
  maxBackupDays: 7

# Valores para el cronjob de backup de pgsql
pgsql:
  serviceName: pgdump
  imageTag: "1.0"
  reqMemory: 100Mi
  reqCpu: 100m
  pvcBackupName: backups
  cronTime: "*/5 * * * *"
  backupDatabases: "basededatos1 basededatos2 sampledb"
  backupStorage: "exampleapp1"
  dbHost: "postgresql"
  dbUser: "root"
  dbPass: "xxxxxxxxxxx"
  deleteOldBackups: false
  maxBackupDays: 7

# Valores para el cronjob de backup de redis
redis:
  serviceName: redisdump
  imageTag: "1.0"
  reqMemory: 100Mi
  reqCpu: 100m
  pvcBackupName: "backups"
  cronTime: "*/5 * * * *"
  backupStorage: "exampleapp"
  dbHost: "redis"
  dbUser: "root"
  dbPass: "xxxxxxxxxxx"
  dbPort: 6379
  waitSaveRdb: 30
  deleteOldBackups: true
  maxBackupDays: 7

# Valores para el cronjob de backup de rsync
rsync:
  serviceName: rsyncdump
  imageTag: "1.0"
  reqMemory: 100Mi
  reqCpu: 100m
  pvcBackupName: "backups"
  pvcOriginName: "pvc-origin"
  cronTime: "*/5 * * * *"
  backupStorage: "exampleapp1"
  deleteOldBackups: false
  maxBackupDays: 7

# Permite habilitar la opci√≥n para crear un buildConfig junto a su imageStream para entornos OpenShift
createBuildConfig: false

imageStream:
  name: "arpovea-tools"
  tag: "latest"
  pullPolicy: IfNotPresent

buildConfig:
  outputImageStreamTag: "arpovea-tools:latest"
  sourceGitUri: "https://github.com/mi-usuario/mi-repo.git"
  sourceGitRef: "master"
  sourceContextDir: "/"
  dockerfilePath: "Dockerfile"
